<?xml version="1.0" encoding="UTF-8"?>

<resource.explorer version="1.0" name="SYS/BIOS" dir="" href="http://processors.wiki.ti.com/index.php/Category:SYSBIOS">

    <content name="Release Notes" href="C:/ti/bios_6_35_04_50/Bios_6_35_04_50_release_notes.html">
	<type>weblink</type>
    </content>
    <content name="Getting Started Guide" href="C:/ti/bios_6_35_04_50/docs/Bios_Getting_Started_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Users Guide" href="C:/ti/bios_6_35_04_50/docs/Bios_User_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Legacy Applications note" href="C:/ti/bios_6_35_04_50/docs/Bios_Legacy_App_Note.pdf">
	<type>weblink</type>
    </content>
	<contents name="ARM" desc="ARM" icon="plugin://icons/obj16/devices.png">
		<contents name="C6-Integra C6A81xx" desc="C6-Integra C6A81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="C6A8167" desc="C6A8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280805133374">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_35280805751745">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_35280805751745"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_35280805751745"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280809874430">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_35280809874430"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_35280810557588">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_35280810557588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_35280810557588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280810650601">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_35280810650601"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="C6A8168" desc="C6A8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280811300082">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_35280813600690">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_35280813600690"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_35280813600690"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280813706211">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_35280813706211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Examples for TI targets." customPageType="genericNote">
				<filter id="filter_35280814336128">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_35280814336128"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_35280814336128"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280814561603">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_35280814561603"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_CortexA"/>
							<attribute key="device.variant" value="Cortex A.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP-L1x" desc="OMAP-L1x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMOMAPL138" desc="EVMOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280815339698">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_35280815339698"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_35280815339698"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280815521232">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_35280815521232"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EXPKITOMAPL138" desc="EXPKITOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280816786518">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_35280816786518"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_35280816786518"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280816960996">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_35280816960996"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EXPKITOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKOMAPL138" desc="LCDKOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280818167910">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_35280818167910"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_35280818167910"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280818335011">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_35280818335011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKOMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL132" desc="OMAPL132" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280820988424">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_35280820988424"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_35280820988424"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280821477861">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_35280821477861"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL132_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL132"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL137" desc="OMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280822609081">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_35280822609081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_35280822609081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280822745071">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_35280822745071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL137_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL138" desc="OMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280823683853">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_35280823683853"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_35280823683853"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280823812787">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_35280823812787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL138_ARM9"/>
							<attribute key="device.variant" value="ARM9.OMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>
	<contents name="C6000" desc="C6000" icon="plugin://icons/obj16/devices.png">
		<contents name="Generic devices" desc="Generic devices" icon="plugin://icons/obj16/devices.png">
			<contents name="Generic C64x+ Device" desc="Generic C64x+ Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280828112837">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280828112837"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280828112837"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280828273523">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280828273523"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C66xx Device" desc="Generic C66xx Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280829092672">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280829092672"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280829092672"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280829218078">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280829218078"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C674x Device" desc="Generic C674x Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280830008040">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280830008040"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280830008040"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280830126070">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280830126070"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C6-Integra C6A81xx" desc="C6-Integra C6A81xx" icon="plugin://icons/obj16/devices.png">
			<contents name="C6A8167" desc="C6A8167" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280833322161">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280833322161"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280833322161"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280833458472">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8167</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280833458472"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8167_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8167"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="C6A8168" desc="C6A8168" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280834239774">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280834239774"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280834239774"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280834355558">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>C6A8168</tag>
					<tag>C6-Integra C6A81xx</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280834355558"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_C6A8168_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6A8168"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="OMAP-L1x" desc="OMAP-L1x" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMOMAPL138" desc="EVMOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280835164123">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280835164123"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280835164123"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280835290491">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280835290491"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EVMOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EXPKITOMAPL138" desc="EXPKITOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280836083340">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280836083340"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280836083340"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280836210670">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EXPKITOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280836210670"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EXPKITOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.EXPKITOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKOMAPL138" desc="LCDKOMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280837908944">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280837908944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280837908944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280838038199">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKOMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280838038199"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKOMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138.LCDKOMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL132" desc="OMAPL132" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280838827841">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280838827841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280838827841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280838944908">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL132</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280838944908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL132_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL132"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL137" desc="OMAPL137" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280839663026">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280839663026"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280839663026"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280839773037">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL137</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280839773037"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL137_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="OMAPL138" desc="OMAPL138" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280840498211">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280840498211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280840498211"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280840608543">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>OMAPL138</tag>
					<tag>OMAP-L1x</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280840608543"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_OMAPL138_TMS320C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.OMAPL138"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C64XX" desc="TMS320C64XX" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6474" desc="EVMC6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280842438317">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280842438317"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280842438317"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280842565968">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280842565968"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMTCI6488" desc="EVMTCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_35280843269654">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_35280843269654"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_35280843269654"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_35280843405323">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_35280843405323"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>

</resource.explorer>
